name: "PyTorch"

on:
  push:
    paths:
      - "Dockerfiles/pytorch/**"
      - "!Dockerfiles/pytorch/README.md"
      - ".github/workflows/pytorch.yml"
    branches:
      - "master"
    tags:
      - "pytorch"
  # workflow_dispatch:
  #   inputs:
  #     ubuntu:
  #       description: "Version of Ubuntu used to build"
  #       required: false
  #       default: "18.04"
  #     cuda:
  #       description: "Version of CUDA used to build"
  #       required: false
  #       default: "11.0"
  #     python:
  #       description: "Version of Python used to build"
  #       required: false
  #       default: "11.0"
  #     pytorch:
  #       description: "Version of PyTorch used to build"
  #       required: false
  #       default: "11.0"

env:
  IMAGE_NAME: "pytorch"

jobs:
  latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Convert repository name to lowercase
        run: echo "GITHUB_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Login to DockerHub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: Dockerfiles/${{ env.IMAGE_NAME }}
          file: Dockerfiles/${{ env.IMAGE_NAME }}/Dockerfile
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
  v1-3-1_1-4-0:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pytorch: ["1.3.1", "1.4.0"]
        cuda: ["10.0-cudnn7"]
        python: ["3.6", "3.7"]
        ubuntu: ["16.04", "18.04"]
        include:
          - pytorch: "1.4.0"
            cuda: "10.0-cudnn7"
            python: "3.8"
            ubuntu: "16.04"
          - pytorch: "1.4.0"
            cuda: "10.0-cudnn7"
            python: "3.8"
            ubuntu: "18.04"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Convert repository name to lowercase
        run: echo "GITHUB_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Login to DockerHub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: Dockerfiles/${{ env.IMAGE_NAME }}
          file: Dockerfiles/${{ env.IMAGE_NAME }}/Dockerfile
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.pytorch }}-cu${{ matrix.cuda }}-py${{ matrix.python }}-ubuntu${{ matrix.ubuntu }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.pytorch }}-cu${{ matrix.cuda }}-py${{ matrix.python }}-ubuntu${{ matrix.ubuntu }}
          build-args: |
            PYTORCH_VERSION=${{ matrix.pytorch }}
            CUDA_VERSION=${{ matrix.cuda }}
            PYTHON_VERSION=${{ matrix.python }}
            UBUNTU_VERSION=${{ matrix.ubuntu }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
  v1-5-1_1-6-0:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pytorch: ["1.5.1", "1.6.0"]
        cuda: ["10.1-cudnn8", "10.2-cudnn8"]
        python: ["3.6", "3.7", "3.8"]
        ubuntu: ["16.04", "18.04"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Convert repository name to lowercase
        run: echo "GITHUB_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Login to DockerHub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: Dockerfiles/${{ env.IMAGE_NAME }}
          file: Dockerfiles/${{ env.IMAGE_NAME }}/Dockerfile
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.pytorch }}-cu${{ matrix.cuda }}-py${{ matrix.python }}-ubuntu${{ matrix.ubuntu }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.pytorch }}-cu${{ matrix.cuda }}-py${{ matrix.python }}-ubuntu${{ matrix.ubuntu }}
          build-args: |
            PYTORCH_VERSION=${{ matrix.pytorch }}
            CUDA_VERSION=${{ matrix.cuda }}
            PYTHON_VERSION=${{ matrix.python }}
            UBUNTU_VERSION=${{ matrix.ubuntu }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
  v1-7-x:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pytorch: ["1.7.0", "1.7.1"]
        cuda: ["10.1-cudnn8", "10.2-cudnn8", "11.0-cudnn8"]
        python: ["3.6", "3.7", "3.8"]
        ubuntu: ["16.04", "18.04"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Convert repository name to lowercase
        run: echo "GITHUB_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Login to DockerHub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: Dockerfiles/${{ env.IMAGE_NAME }}
          file: Dockerfiles/${{ env.IMAGE_NAME }}/Dockerfile
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.pytorch }}-cu${{ matrix.cuda }}-py${{ matrix.python }}-ubuntu${{ matrix.ubuntu }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.pytorch }}-cu${{ matrix.cuda }}-py${{ matrix.python }}-ubuntu${{ matrix.ubuntu }}
          build-args: |
            PYTORCH_VERSION=${{ matrix.pytorch }}
            CUDA_VERSION=${{ matrix.cuda }}
            PYTHON_VERSION=${{ matrix.python }}
            UBUNTU_VERSION=${{ matrix.ubuntu }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
  # # 2FA enabled is not supported yet, fix this someday
  # update-docker-hub-readme:
  #   runs-on: ubuntu-latest
  #   if: ${{ startsWith(github.ref, 'refs/tags/') }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Update repository description
  #       uses: peter-evans/dockerhub-description@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #         repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
  #         readme-filepath: Dockerfiles/${{ env.IMAGE_NAME }}/README.md
